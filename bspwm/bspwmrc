#!/usr/bin/env bash

#  ╔╗ ╔═╗╔═╗╦ ╦╔╦╗
#  ╠╩╗╚═╗╠═╝║║║║║║
#  ╚═╝╚═╝╩  ╚╩╝╩ ╩

#  ┬┌┬┐┌─┐┌─┐┬─┐┌┬┐┌─┐┌┐┌┌┬┐  ┬  ┬┌─┐┬─┐┬┌─┐┌┐ ┬  ┌─┐┌─┐
#  ││││├─┘│ │├┬┘ │ ├─┤│││ │   └┐┌┘├─┤├┬┘│├─┤├┴┐│  ├┤ └─┐
#  ┴┴ ┴┴  └─┘┴└─ ┴ ┴ ┴┘└┘ ┴    └┘ ┴ ┴┴└─┴┴ ┴└─┘┴─┘└─┘└─┘

read -r RICETHEME <"$HOME"/.config/bspwm/.rice
export RICETHEME
PATH="$HOME/.config/bspwm/scripts:$PATH"
rice_dir="$HOME/.config/bspwm/rices/$RICETHEME"

## Fix java applications
export _JAVA_AWT_WM_NONREPARENTING=1

#  ┬ ┬┌─┐┬─┐┬┌─┌─┐┌─┐┌─┐┌─┐┌─┐┌─┐
#  ││││ │├┬┘├┴┐└─┐├─┘├─┤│  ├┤ └─┐
#  └┴┘└─┘┴└─┴ ┴└─┘┴  ┴ ┴└─┘└─┘└─┘

workspaces() {
  name=1
  for monitor in $(bspc query -M); do
    bspc monitor "${monitor}" -n "$name" -d '1' '2' '3' '4' '5' '6' '7' '8'
    #bspc monitor ${monitor} -n "$name" -d '' '' '' '' '' ''
    ((name++))
  done
}

workspaces

#  ┌┐ ┌─┐┌─┐┬ ┬┌┬┐  ┌─┐┌─┐┌┐┌┌─┐┬┌─┐
#  ├┴┐└─┐├─┘││││││  │  │ ││││├┤ ││ ┬
#  └─┘└─┘┴  └┴┘┴ ┴  └─┘└─┘┘└┘└  ┴└─┘

bspc config external_rules_command $HOME/.config/bspwm/scripts/ExternalRules

#bspc wm --adopt-orphans
bspc rule -a scratch sticky=on state=floating focus=on

#  ┬  ┌─┐┬ ┬┌┐┌┌─┐┬ ┬  ┬─┐┬┌─┐┌─┐┌─┐
#  │  ├─┤│ │││││  ├─┤  ├┬┘││  ├┤ └─┐
#  ┴─┘┴ ┴└─┘┘└┘└─┘┴ ┴  ┴└─┴└─┘└─┘└─┘

# Set system vars for polybar
. SetSysVars

# Terminate already running polybar, eww, picom, sxhkd and dunst instances
processes=("picom" "polybar" "eww" "sxhkd" "dunst")

for process in "${processes[@]}"; do
  if pidof -q "$process"; then
    pkill -9 -x "$process" >/dev/null
    sleep 0.1
  fi
done

# Load colors, dunst, bars and/or eww widgets
. ${rice_dir}/Theme.sh

# Launch picom // If you have old hardware or encounter problems
# uncomment the picom "--legacy-backends" line and comment the current one.
#ll picom --config "$HOME"/.config/bspwm/picom.conf &
#picom --legacy-backends --config "$HOME"/.config/bspwm/picom.conf &

# Launch dunst notification daemon
dunst -config "$HOME"/.config/bspwm/dunstrc &

# Set random wallpaper for actual rice
feh -z --no-fehbg --bg-fill ${rice_dir}/walls

# Reload sxhkd daemon
sxhkd -c "$HOME"/.config/bspwm/sxhkdrc &

# Launch polkit
pidof -q polkit-gnome-authentication-agent-1 || { /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 & }

# Fix cursor
xsetroot -cursor_name left_ptr

#启动gpt代理
#启动clash
#启动fcitx5
#启动dunst
numlockx on
# pkill dunst
# dunst -config ~/.config/dunst/dunstrc &
# dunst &
#挂起sdunetd
# ~/Public/sdunetd/sdunetd-linux-amd64 -c ~/Public/sdunetd/config. &
# ~/Public/sdunetd/sdunetd-linux-amd64 -c ~/Public/sdunetd/configv6.json &
LOCK_FLAG="/tmp/.bspwm_first_run_lock"
killall -q flameshot
flameshot &
clash-verge --daemon &
# if [ ! -f "$LOCK_FLAG" ]; then
#   # 如果文件不存在，说明是第一次启动 bspwm
#   # 执行锁屏命令，并在后台运行
#   exec /home/N1nE/.config/bspwm/lock -r &
#   # 创建锁屏标志文件，表示已经执行过锁屏
#   touch "$LOCK_FLAG"
# fi
export PATH="$HOME/.config/bspwm/src:$PATH"
export XDG_CURRENT_DESKTOP='bspwm'
## WORKSPACE

## BSPWM CONFIG

bspc config external_rules_command "${HOME}"/.config/bspwm/src/ExternalRules

bspc config window_gap 5
bspc config split_ratio 0.5
bspc config single_monocle true

bspc config automatic_scheme longest_side
bspc config initial_polarity second_child
bspc config removal_adjustment true

bspc config focus_follows_pointer true
bspc config pointer_follows_focus false
bspc config pointer_follows_monitor true
bspc config pointer_motion_interval 7
bspc config pointer_modifier mod4
bspc config pointer_action1 move
bspc config pointer_action2 resize_side
bspc config pointer_action3 resize_corner

## AUTOSTART

run() {
  if ! pidof -q "$1"; then
    "$@" &
  fi
}

# Set system vars for polybar
"$HOME"/.config/bspwm/src/SetSysVars

# Launch sxhkd daemon
run sxhkd -c "${HOME}"/.config/bspwm/src/config/sxhkdrc

# Load current theme
"${HOME}"/.config/bspwm/src/Theme.sh

# Launch picom
run picom --config "${HOME}"/.config/bspwm/src/config/picom.conf

# Launch xsettingsd
run xsettingsd --config="${HOME}"/.config/bspwm/src/config/xsettingsd >/dev/null 2>&1

# Launch eww daemon
pidof -q eww || { eww -c "${HOME}"/.config/bspwm/eww daemon & }

# Launch clipboard daemon
run clipcatd

# Launch clipboard daemon
pidof -q clipcatd || { clipcatd & }
killall -q xss-lock && sleep 1
xss-lock --transfer-sleep-lock -- ~/.config/bspwm/scripts/lock &
# Start one time message
[ ! -f "$HOME/.config/bspwm/src/config/.first_run_done" ] && alacritty --hold -e sh -c 'cat "$HOME/.config/bspwm/src/config/FirstMessage.txt"; sleep 0.1' && touch "$HOME/.config/bspwm/src/config/.first_run_done"
